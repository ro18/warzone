# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven


on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        version: [22.3.0]

    steps:
    - uses: actions/checkout@v3
    - uses: graalvm/setup-graalvm@v1
      with:
          version: ${{ matrix.version }}
          java-version: '17'
          components: 'native-image'
          cache: 'maven'
          native-image-job-reports: 'true'
    - name: Run 'native-build
      run: mvn native:compile -Pnative -DskipTests=true
    - name: Run maven tests
      run: mvn test -Dtest=WarzoneApplicationTest

    - name: Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
    - name: Deploy JavaDoc
      uses: MathieuSoysal/Javadoc-publisher.yml@v2.4.0
      with:
          javadoc-branch: javadoc
          java-version: 17
          target-folder: javadoc # url will be https://<username>.github.io/<repo>/javadoc, This can be left as nothing to generate javadocs in the root folder.
          project: maven 
          # subdirectories: moduleA moduleB #for subdirectories support, needs to be run with custom command


#./mvnw test -Dtest=WarzoneApplicationTest

#/mvwn test -Dtest=PlayerFeaturesTest#TestaddPlayers
     
      
     

  
